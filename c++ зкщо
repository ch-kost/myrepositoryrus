#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

class MessageStorage {
private:
    vector<string> messages;

public:
    // Метод для добавления нового сообщения в хранилище
    void addMessage(string message) {
        messages.push_back(message);
    }

    // Метод для изменения сообщения по индексу
    void editMessage(int index, string newMessage) {
        if (index >= 0 && index < messages.size()) {
            messages[index] = newMessage;
        }
    }

    // Метод для удаления сообщения по индексу
    void deleteMessage(int index) {
        if (index >= 0 && index < messages.size()) {
            messages.erase(messages.begin() + index);
        }
    }

    // Метод для вывода всех сообщений
    void printAllMessages() {
        int index = 1;
        for (string message : messages) {
            cout << index << ". " << message << endl;
            index++;
        }
    }
};

int main() {
    MessageStorage messages;

    messages.addMessage("Привет!");
    messages.addMessage("Как дела?");
    messages.addMessage("Чем занимаешься?");

    messages.printAllMessages();

    messages.deleteMessage(1);

    messages.printAllMessages();

    messages.editMessage(0, "Добрый день!");

    messages.printAllMessages();

    return 0;
}
